<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs.subscriptionsystem.mapper.TUserTrendActionMapper">
  <resultMap id="BaseResultMap" type="bbs.subscriptionsystem.entity.TUserTrendAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="action_type" jdbcType="TINYINT" property="actionType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
    <result column="target_type" jdbcType="TINYINT" property="targetType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="pub_time" jdbcType="TIMESTAMP" property="pubTime" />
    <result column="following_id" jdbcType="BIGINT" property="followingId" />
    <result column="topic_id" jdbcType="BIGINT" property="topicId" />
    <result column="post_id" jdbcType="BIGINT" property="postId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.actionTypeCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.targetTypeCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.actionTypeCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.targetTypeCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    id, action_type, target_type, user_id, pub_time, following_id, topic_id, post_id
  </sql>
  <select id="selectByExample" parameterType="bbs.subscriptionsystem.entity.TUserTrendActionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_trend_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_user_trend_action
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    delete from t_user_trend_action
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="bbs.subscriptionsystem.entity.TUserTrendActionExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    delete from t_user_trend_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bbs.subscriptionsystem.entity.TUserTrendAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_trend_action (action_type, 
      target_type, 
      user_id, pub_time, following_id, 
      topic_id, post_id)
    values (#{actionType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, 
      #{targetType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, 
      #{userId,jdbcType=BIGINT}, #{pubTime,jdbcType=TIMESTAMP}, #{followingId,jdbcType=BIGINT}, 
      #{topicId,jdbcType=BIGINT}, #{postId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="bbs.subscriptionsystem.entity.TUserTrendAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_trend_action
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actionType != null">
        action_type,
      </if>
      <if test="targetType != null">
        target_type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="pubTime != null">
        pub_time,
      </if>
      <if test="followingId != null">
        following_id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="postId != null">
        post_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actionType != null">
        #{actionType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="pubTime != null">
        #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="followingId != null">
        #{followingId,jdbcType=BIGINT},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=BIGINT},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bbs.subscriptionsystem.entity.TUserTrendActionExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    select count(*) from t_user_trend_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    update t_user_trend_action
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.actionType != null">
        action_type = #{record.actionType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      </if>
      <if test="record.targetType != null">
        target_type = #{record.targetType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.pubTime != null">
        pub_time = #{record.pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.followingId != null">
        following_id = #{record.followingId,jdbcType=BIGINT},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=BIGINT},
      </if>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    update t_user_trend_action
    set id = #{record.id,jdbcType=BIGINT},
      action_type = #{record.actionType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      target_type = #{record.targetType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      user_id = #{record.userId,jdbcType=BIGINT},
      pub_time = #{record.pubTime,jdbcType=TIMESTAMP},
      following_id = #{record.followingId,jdbcType=BIGINT},
      topic_id = #{record.topicId,jdbcType=BIGINT},
      post_id = #{record.postId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bbs.subscriptionsystem.entity.TUserTrendAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    update t_user_trend_action
    <set>
      <if test="actionType != null">
        action_type = #{actionType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      </if>
      <if test="targetType != null">
        target_type = #{targetType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="pubTime != null">
        pub_time = #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="followingId != null">
        following_id = #{followingId,jdbcType=BIGINT},
      </if>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=BIGINT},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="bbs.subscriptionsystem.entity.TUserTrendAction">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 26 22:08:32 CST 2018.
    -->
    update t_user_trend_action
    set action_type = #{actionType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      target_type = #{targetType,jdbcType=TINYINT,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
      user_id = #{userId,jdbcType=BIGINT},
      pub_time = #{pubTime,jdbcType=TIMESTAMP},
      following_id = #{followingId,jdbcType=BIGINT},
      topic_id = #{topicId,jdbcType=BIGINT},
      post_id = #{postId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- customize -->
  
  <!-- resultMap注意事项：
        1.target如果为Post，则必须关联topic i
   -->
  <resultMap id="UserTrendActionResultMap" type="bbs.subscriptionsystem.action.entity.UserTrendAction">
    <id column="id" property="id" />
    <result column="pub_time" jdbcType="TIMESTAMP" property="pubTime" />
    <result column="target_type" jdbcType="TINYINT" property="targetType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
    <association javaType="bbs.forum.DTO.User" property="user">
        <id column="user_id" property="id" />
        <result column="user_nickname" property="nickname" />
    </association>
    <discriminator column="action_type" javaType="bbs.subscriptionsystem.enuma.UserTrendActionType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler">
       <case resultType="bbs.subscriptionsystem.action.entity.AbstractCollectAction" value="COLLECT">
            <discriminator column="target_type" javaType="bbs.subscriptionsystem.enuma.UserTrendActionTargetType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler">
                <case resultType="bbs.subscriptionsystem.action.entity.CollectTopicAction" value="TOPIC">
                    <association javaType="bbs.forum.DTO.Topic" property="target">
                        <id column="topic_id" property="id" />
                        <result column="topic_title" property="title" />
                    </association>
                </case>
                <case resultType="bbs.subscriptionsystem.action.entity.CollectPostAction" value="POST">
                    <association javaType="bbs.forum.DTO.Post" property="target">
                        <id column="post_id" property="id" />
                        <result column="post_content" property="content" />
                        <!-- 此字段记录用户动态动作（发送回复动作）中包含的post所属的topic -->
                        <association javaType="bbs.forum.DTO.Topic" property="topic">
                            <id column="post_topic_id" property="id" />
                            <result column="post_topic_title" property="title" />
                        </association>
                    </association>
                </case>
                <case resultType="bbs.subscriptionsystem.action.entity.CollectUserAction" value="USER">
                    <association javaType="bbs.forum.DTO.User" property="target">
                        <id column="following_id" property="id" />
                        <result column="following_nickname" property="nickname" />
                    </association>
                </case>
            </discriminator>
       </case>     
       <case resultType="bbs.subscriptionsystem.action.entity.AbstractPubAction" value="PUB">
            <discriminator column="target_type" javaType="bbs.subscriptionsystem.enuma.UserTrendActionTargetType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler">
                <case resultType="bbs.subscriptionsystem.action.entity.PubTopicAction" value="TOPIC">
                    <association javaType="bbs.forum.DTO.Topic" property="target">
                        <id column="topic_id" property="id" />
                        <result column="topic_title" property="title" />
                    </association>
                </case>
                <case resultType="bbs.subscriptionsystem.action.entity.PubPostAction" value="POST">
                    <association javaType="bbs.forum.DTO.Post" property="target">
                        <id column="post_id" property="id" />
                        <result column="post_content" property="content" />
                        <!-- 此字段记录用户动态动作（发送回复动作）中包含的post所属的topicId -->
                        <association javaType="bbs.forum.DTO.Topic" property="topic">
                            <id column="post_topic_id" property="id" />
                            <result column="post_topic_title" property="title" />
                        </association>
                    </association>
                </case>
            </discriminator>
       </case>     
    </discriminator>
  </resultMap>
  <sql id="limit">
    limit #{pageParam.pageNo}, #{pageParam.pageSize}
  </sql> 
  
  <!-- action_type : 0 = like, 1 = pub -->
  <!-- target_type : 0 = topic, 1 = post -->
  
  <sql id="selectAllLikeTopicActionSql">
    select uta.id as id, uta.topic_id as topic_id, uta.pub_time as pub_time, t.title as topic_title  
    from t_user_trend_action uta left join t_topic t
        on uta.topic_id = t.id and uta.action_type = 0 and uta.target_type = 0 
    where uta.topic_id = #{topicId}
    <include refid="limit" /> 
  </sql>
  <sql id="selectAllLikePostActionSql">
    select uta.id as id, uta.post_id as post_id, uta.pub_time as pub_time, p.content as post_content
    from t_user_trend_action uta left join t_post p
        on uta.post_id = p.id and uta.action_type = 0 and uta.target_type = 1
    where uta.post_id = #{postId}
    <include refid="limit" /> 
  </sql>
  <sql id="selectAllPubTopicActionSql">
    select uta.id as id, uta.topic_id as topic_id, uta.pub_time as pub_time, t.title as topic_title  
    from t_user_trend_action uta left join t_topic t
        on uta.topic_id = t.id and uta.action_type = 1 and uta.target_type = 0 
    where uta.topic_id = #{topicId}
    <include refid="limit" /> 
  </sql>
  <sql id="selectAllPubPostActionSql">
    select uta.id as id, uta.post_id as post_id, uta.pub_time as pub_time, p.content as post_content
    from t_user_trend_action uta left join t_post p
        on uta.post_id = p.id and uta.action_type = 1 and uta.target_type = 1
    where uta.post_id = #{postId}
    <include refid="limit" /> 
  </sql>
  <sql id="abstract-dto-column-list">
  uta.id as id, uta.action_type as action_type, uta.target_type as target_type, uta.pub_time as pub_time,
        uta.post_id as post_id, p.content as post_content,p.topic_id as post_topic_id, pt.title as post_topic_title,
        uta.topic_id as topic_id, t.title as topic_title,
        uta.user_id as user_id, u.nickname as user_nickname,
        uta.following_id as following_id, fo.nickname as following_nickname
  </sql>
  <sql id="selectAbstractActionSql"><!-- 一次取出所有resultMap需要的字段，不管外键是不是null -->
    select <include refid="abstract-dto-column-list" /> 
    from t_user_trend_action uta 
        inner join t_user_profile u
            on uta.user_id = u.id
        left join t_topic t
            on uta.topic_id = t.id <!-- 此处用left， 则topic_id为null时依旧能取出数据 -->
        left join t_post p
            on uta.post_id = p.id
        left join t_topic pt <!-- post所属的topic -->
            on p.topic_id = pt.id
        left join t_user_profile fo 
            on uta.following_id = fo.id
  </sql>
  
  <select id="selectAllUidAfterLastReadTime" resultMap="UserTrendActionResultMap">
           <include refid="selectAbstractActionSql" /> 
            where uta.user_id = #{userId} and uta.pub_time &gt; #{lastReadTime}
  </select>

  <select id="selectAllByFollowingIdAfterLastReadTime" resultMap="UserTrendActionResultMap">
           <include refid="selectAbstractActionSql" /> 
            where uta.following_id = #{followingId} and uta.pub_time &gt; #{lastReadTime}
  </select>
  <sql id="countSql">
      select count(*)
    from t_user_trend_action uta 
        left join t_topic t
            on uta.topic_id = t.id <!-- 此处用left， 则topic_id为null时依旧能取出数据 -->
        left join t_post p
            on uta.post_id = p.id
        left join t_topic pt <!-- post所属的topic -->
            on p.topic_id = pt.id
        left join t_user_profile u
            on uta.user_id = u.id
        left join t_user_profile fo 
            on uta.following_id = fo.id
  </sql>
  <select id="countUidAfterLastReadTime" resultType="int">
    <include refid="countSql" /> 
        where uta.user_id = #{userId} and uta.pub_time &gt; #{lastReadTime}
  </select>
  <select id="countByFollowingIdAfterLastReadTime" resultType="int">
    <include refid="countSql" /> 
        where uta.following_id = #{followingId} and uta.pub_time &gt; #{lastReadTime}
  </select>
  <select id="selectUserTrendActionById" parameterType="long" resultMap="UserTrendActionResultMap">
     <include refid="selectAbstractActionSql" />
     where uta.id = #{actionId} 
  </select>
<!--   &amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;select id="selectAllByUidAfterLastReadTime" resultMap="UserTrendActionResultMap"&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt; -->
<!--     select &amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;include refid="Base_Column_List" /&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt; -->
<!--     from t_user_trend_action  -->
<!--     where user_id = #{userId} -->
<!--     &amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;include refid="limit" /&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt;  -->
<!--   &amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;/select&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt; -->
  
</mapper>