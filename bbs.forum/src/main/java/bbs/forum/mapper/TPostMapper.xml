<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs.forum.mapper.TPostMapper">
	<resultMap id="BaseResultMap" type="bbs.forum.entity.TPost">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="author_id" jdbcType="BIGINT"
			property="authorId" />
		<result column="pub_time" jdbcType="TIMESTAMP"
			property="pubTime" />
		<result column="last_modified_time" jdbcType="TIMESTAMP"
			property="lastModifiedTime" />
		<result column="reply_post_id" jdbcType="BIGINT"
			property="replyPostId" />
		<result column="topic_id" jdbcType="BIGINT" property="topicId" />
		<result column="html_content" jdbcType="VARCHAR"
			property="htmlContent" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		id, content, author_id, pub_time, last_modified_time, reply_post_id,
		topic_id, html_content
	</sql>
	<select id="selectByExample"
		parameterType="bbs.forum.entity.TPostExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_post
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		select
		<include refid="Base_Column_List" />
		from t_post
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		delete from t_post
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="bbs.forum.entity.TPostExample">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		delete from t_post
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="bbs.forum.entity.TPost">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_post (content, author_id, pub_time,
		last_modified_time,
		reply_post_id, topic_id,
		html_content)
		values
		(#{content,jdbcType=VARCHAR}, #{authorId,jdbcType=BIGINT},
		#{pubTime,jdbcType=TIMESTAMP},
		#{lastModifiedTime,jdbcType=TIMESTAMP},
		#{replyPostId,jdbcType=BIGINT}, #{topicId,jdbcType=BIGINT},
		#{htmlContent,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="bbs.forum.entity.TPost">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_post
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="content != null">
				content,
			</if>
			<if test="authorId != null">
				author_id,
			</if>
			<if test="pubTime != null">
				pub_time,
			</if>
			<if test="lastModifiedTime != null">
				last_modified_time,
			</if>
			<if test="replyPostId != null">
				reply_post_id,
			</if>
			<if test="topicId != null">
				topic_id,
			</if>
			<if test="htmlContent != null">
				html_content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="authorId != null">
				#{authorId,jdbcType=BIGINT},
			</if>
			<if test="pubTime != null">
				#{pubTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastModifiedTime != null">
				#{lastModifiedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="replyPostId != null">
				#{replyPostId,jdbcType=BIGINT},
			</if>
			<if test="topicId != null">
				#{topicId,jdbcType=BIGINT},
			</if>
			<if test="htmlContent != null">
				#{htmlContent,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="bbs.forum.entity.TPostExample"
		resultType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		select count(*) from t_post
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		update t_post
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=VARCHAR},
			</if>
			<if test="record.authorId != null">
				author_id = #{record.authorId,jdbcType=BIGINT},
			</if>
			<if test="record.pubTime != null">
				pub_time = #{record.pubTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.lastModifiedTime != null">
				last_modified_time =
				#{record.lastModifiedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.replyPostId != null">
				reply_post_id = #{record.replyPostId,jdbcType=BIGINT},
			</if>
			<if test="record.topicId != null">
				topic_id = #{record.topicId,jdbcType=BIGINT},
			</if>
			<if test="record.htmlContent != null">
				html_content = #{record.htmlContent,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		update t_post
		set id = #{record.id,jdbcType=BIGINT},
		content =
		#{record.content,jdbcType=VARCHAR},
		author_id =
		#{record.authorId,jdbcType=BIGINT},
		pub_time =
		#{record.pubTime,jdbcType=TIMESTAMP},
		last_modified_time =
		#{record.lastModifiedTime,jdbcType=TIMESTAMP},
		reply_post_id =
		#{record.replyPostId,jdbcType=BIGINT},
		topic_id =
		#{record.topicId,jdbcType=BIGINT},
		html_content =
		#{record.htmlContent,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="bbs.forum.entity.TPost">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		update t_post
		<set>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="authorId != null">
				author_id = #{authorId,jdbcType=BIGINT},
			</if>
			<if test="pubTime != null">
				pub_time = #{pubTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastModifiedTime != null">
				last_modified_time =
				#{lastModifiedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="replyPostId != null">
				reply_post_id = #{replyPostId,jdbcType=BIGINT},
			</if>
			<if test="topicId != null">
				topic_id = #{topicId,jdbcType=BIGINT},
			</if>
			<if test="htmlContent != null">
				html_content = #{htmlContent,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="bbs.forum.entity.TPost">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Jul 18 
			20:48:30 CST 2018. -->
		update t_post
		set content = #{content,jdbcType=VARCHAR},
		author_id =
		#{authorId,jdbcType=BIGINT},
		pub_time = #{pubTime,jdbcType=TIMESTAMP},
		last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
		reply_post_id = #{replyPostId,jdbcType=BIGINT},
		topic_id =
		#{topicId,jdbcType=BIGINT},
		html_content =
		#{htmlContent,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- customize -->
	<resultMap id="PostResultMap" type="bbs.forum.DTO.Post">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="html_content" jdbcType="VARCHAR"
			property="htmlContent" />
		<result column="pub_time" jdbcType="TIMESTAMP"
			property="pubTime" />
		<result column="last_modified_time" jdbcType="TIMESTAMP"
			property="lastModifiedTime" />
		<association javaType="bbs.forum.DTO.Post"
			property="replyPost">
			<id column="reply_post_id" property="id" />
			<result column="reply_post_content" property="content" />
			<association javaType="bbs.forum.DTO.User"
				property="author">
				<id column="reply_post_author_id" property="id" />
				<result column="reply_post_author_nickname"
					property="nickname" />
			</association>
		</association>
		<association javaType="bbs.forum.DTO.Topic"
			property="topic">
			<id column="topic_id" property="id" />
			<result column="topic_title" property="title" />
		</association>
		<association javaType="bbs.forum.DTO.User"
			property="author">
			<id column="author_id" property="id" />
			<result column="author_nickname" property="nickname" />
			<result column="author_sex" jdbcType="TINYINT" property="sex"
				typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
			<result column="author_credit" jdbcType="INTEGER"
				property="credit" />
			<result column="author_avatar" jdbcType="INTEGER"
				property="avatar" />
			<result column="author_topic_amount" property="topicAmount" />
			<result column="author_following_amount"
				property="followingAmount" />
		</association>
	</resultMap>

	<sql id="limitByPageParam">
		limit #{pageParam.pageNo}, #{pageParam.pageSize}
	</sql>
	<sql id="dto_post_column_list">
		p.id as id, p.content as content,p.html_content as
		html_content,
		p.author_id as author_id, au.nickname as author_nickname,
		au.sex as author_sex,
		au.credit as author_credit, au.avatar as
		author_avatar,
		(select count(*) from t_topic t where t.author_id =
		au.id) as
		author_topic_amount,
		(select count(*) from t_collection c
		where c.collection_type = 3 and
		c.user_id = au.id) as
		author_following_amount,
		p.pub_time as pub_time,
		p.last_modified_time as
		last_modified_time,
		p.reply_post_id as
		reply_post_id, rp.content as
		reply_post_content,
		rp.author_id as reply_post_author_id, rpu.nickname
		as reply_post_author_nickname,
		p.topic_id as topic_id, t.title as
		topic_title
	</sql>

	<sql id="selectPostSql">
		select
		<include refid="dto_post_column_list" />
		from t_post p
		left join t_user_profile au
		on p.author_id = au.id
		left
		join t_topic t
		on p.topic_id = t.id
		left join t_post rp
		on
		p.reply_post_id = rp.id
		left join t_user_profile rpu
		on rp.author_id =
		rpu.id

	</sql>

	<select id="selectPostById" parameterType="long"
		resultMap="PostResultMap">
		<include refid="selectPostSql" />
		where p.id = #{postId}
	</select>

	<select id="selectAllPostByTopicId" resultMap="PostResultMap">
		<include refid="selectPostSql" />
		where p.topic_id = #{topicId}
		<include refid="limitByPageParam" />
	</select>

	<select id="selectAllPostByAuthorId" resultMap="PostResultMap">
		<include refid="selectPostSql" />
		where p.author_id = #{authorId}
		<include refid="limitByPageParam" />
	</select>

	<select id="selectMainPost" resultMap="PostResultMap">
		<include refid="selectPostSql" />
		where t.id = #{topicId} and t.main_post_id = p.id
	</select>

	<select id="searchAll" resultMap="PostResultMap">
		<include refid="selectPostSql" />
		where p.content like concat("%", #{content}, "%")
		<include refid="limitByPageParam" />
	</select>

	<select id="countByUidAndPostId" resultType="int">
		select count(p.id)
		from t_post p
		left join t_user_profile au
		on p.author_id = au.id
		left
		join t_topic t
		on p.topic_id = t.id
		left join t_post rp
		on
		p.reply_post_id = rp.id
		left join t_user_profile rpu
		on rp.author_id =
		rpu.id
		where p.author_id = #{userId} and p.id = #{postId}
	</select>
	<resultMap type="bbs.forum.resultentity.LastPostInForumResult" id="ForumIdAndPostMap" >
		<result property="forumId" column="forum_id" />
		<association property="post" resultMap="PostResultMap"></association>
	</resultMap>

	<select id="selectLastPostByForumId" parameterType="int"
		resultMap="ForumIdAndPostMap">
		select    *
        from (
            select
        p.id as id, p.content as content,p.html_content as
        html_content,
        p.author_id as author_id, au.nickname as author_nickname, au.sex as author_sex,
        au.credit as author_credit, au.avatar as author_avatar,
        (select count(*) from t_topic t where t.author_id = au.id) as
        author_topic_amount,
        (select count(*) from t_collection c where c.collection_type = 3 and
        c.user_id = au.id) as author_following_amount,
        p.pub_time as pub_time,
        p.last_modified_time as last_modified_time,
        p.reply_post_id as
        reply_post_id, rp.content as reply_post_content,
        rp.author_id as reply_post_author_id, rpu.nickname as reply_post_author_nickname,
        p.topic_id as topic_id, t.title as topic_title,
        t.forum_id as forum_id
        from t_post p
        left join t_user_profile au
        on p.author_id = au.id
        left join t_topic t
        on p.topic_id = t.id
        left join t_post rp
        on p.reply_post_id = rp.id
        left join t_user_profile rpu
        on rp.author_id = rpu.id
            order by p.pub_time DESC
        )  orderedpost
        group by forum_id
	</select>

	<select id="selectAllReply" resultMap="PostResultMap">
		<include refid="selectPostSql" />
		where p.reply_post_id = #{replyId}
		<include refid="limitByPageParam" />
	</select>
	<update id="likesPlusOne" parameterType="long">
		update t_post set likes
		= likes + 1
	</update>
</mapper>